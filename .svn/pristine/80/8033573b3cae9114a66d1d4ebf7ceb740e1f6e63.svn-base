package kr.co.publicvoid.mapper;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.junit.Test;

import kr.co.publicvoid.dto.Criteria;
import kr.co.publicvoid.util.MybatisUtils;
import kr.co.publicvoid.vo.GameVO;
import lombok.Data;
import lombok.extern.log4j.Log4j;

@Data
@Log4j
public class GameMapperTests {

//	@Setter(onMethod = @Autowired) 이클립스 하는방법이라고 해서 알
//	private GameMapper gameMapper;

	private GameMapper gameMapper = MybatisUtils.sqlSessionFactory().openSession(true).getMapper(GameMapper.class);

	@Test
	public void testMapper() {
		log.info(gameMapper);
		assert gameMapper != null : "gameMapper 변수는 null일 수 없습니다.";
//		log.info(gameMapper);
	}

	// 전체조회
	@Test
	public void testGetList() {
//		log.info(gameMapper.getList(new Criteria()).size());
//		gameMapper.getList(new Criteria()).forEach(log::info);
		gameMapper.selectList().forEach(log::info);
	}

	// 생성
	@Test
	public void testInsert() throws ParseException {
		GameVO vo = new GameVO();
		vo.setGenreNo(1L);
		vo.setPublisherNo(2L);
		vo.setGameName("테스트");
		vo.setGameDesc("gameDesc");
		vo.setGameVideoUrl("video");
		vo.setGamePrice(12000);
		vo.setGameDeveloper("asd");

		// Date 타입으로 저장 시 new Date(String) 형식의 메서드가 Deprecated되어 아래와 같이 할 수밖에 없는지?
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		Date releaseDate = dateFormat.parse("2023-10-11 12:12:12");
		vo.setGameReleaseDate(releaseDate);

		vo.setGameAgeLimit(0);
		vo.setGameSpec("똥컴도가능");

		log.info(gameMapper.insert(vo));
	}
	@Test
	public void testInsertSelectKey() throws ParseException {
		GameVO vo = new GameVO();
		vo.setGenreNo(1L);
		vo.setPublisherNo(2L);
		vo.setGameName("테스트");
		vo.setGameDesc("gameDesc");
		vo.setGameVideoUrl("video");
		vo.setGamePrice(12000);
		vo.setGameDeveloper("asd");
		log.info(vo.getGameNo());

		// Date 타입으로 저장 시 new Date(String) 형식의 메서드가 Deprecated되어 아래와 같이 할 수밖에 없는지?
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		Date releaseDate = dateFormat.parse("2023-10-11 12:12:12");
		vo.setGameReleaseDate(releaseDate);

		vo.setGameAgeLimit(0);
		vo.setGameSpec("똥컴도가능");
		gameMapper.insertSelectKey(vo);
		log.info(gameMapper.insertSelectKey(vo));
		log.info(vo.getGameNo());
	}

	// 단일조회
	@Test
	public void testRead() {
		log.info(gameMapper.read(186L));
	}

	// 업데이트
	@Test
	public void testUpdate() {
		GameVO vo = gameMapper.read(186L);
//		vo.setGameNo(vo.getGameNo());
		log.info(vo.getGameNo());

		vo.setGameName("용과 같이 게임 이름 업데이트1");
		gameMapper.update(vo);
	}

	// 삭제
	@Test
	public void testDelete() {
		gameMapper.delete(342L);
	}

	// 검색 조건 쿼리 진행중 이름만 테스트 완료
//	@Test
//	public void TestSerch() {
//		Map<String, String> map = new HashMap<>();
//		map.put("N", "게임제목");
//		gameMapper.testSearch(map).forEach(i -> log.info(i));
//	}
	@Test
	public void testSearch() {
		Map<String, String> map = new HashMap<>();
		map.put("N", "용");
		List<GameVO> games = gameMapper.insertSerch(map);
//	    log.info(map);
//	    List<Integer> languges = new ArrayList<>();
//	    languges.add(1);
//	    languges.add(2);

		// 이름 테스트 : 예를 들어 게임 이름만 출력
		for (GameVO game : games) {
			log.info("게임 이름: " + game.getGameName());
			log.info("asd");
		}
		// 이름 완료

	}

}
