package kr.co.publicvoid.dto;

import java.io.File;
import java.net.URI;
import java.net.URISyntaxException;

import kr.co.publicvoid.controller.file.FileUploadController;
import kr.co.publicvoid.vo.MemberImageVO;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class MemberImageDTO {
	private String uuid;
	private String origin;
	private String path;
	private boolean image;
	
	
	// 원본 이미지 경로
	public String getUrl(String uuid, String origin, String path, boolean image) throws URISyntaxException {
		String qs = 
				"uuid=" + uuid +
				"&origin=" + origin +
				"&path=" + path +
				"&image=" + image;
		URI uri = new URI("/uploadAjax?" + qs);
		return uri.toString();
	}
	
	// 섬네일 이미지 경로
	public String getThumb(String uuid, String origin, String path, boolean image) throws URISyntaxException {
		if(!image) return "";
		String qs = 
				"uuid=" + uuid +
				"&origin=" + origin +
				"&path=" + path +
				"&image=" + image;
		URI uri = new URI("/uploadAjax?" + qs);
		return uri.toString();
	}
	
	public File toFile() {
		return toFile(false);
	}
	
	public File toFile(boolean thumb) {
		File file = new File(FileUploadController.MEMBER_UPLOAD_PATH, path);
		file = new File(file, (thumb ? "s_" : "") + uuid + "_" + origin);
		return file;
	}
	
	// to VO
	public MemberImageDTO toVO() {
		return MemberImageDTO.builder().uuid(uuid).origin(origin).path(path).image(image).build();
	}
	
	// from VO to DTO
	public MemberImageDTO(MemberImageVO vo) {
		uuid = vo.getUuid();
		origin = vo.getOriginFileName();
		path = vo.getPath();
		image = vo.isImage();
	}
}
